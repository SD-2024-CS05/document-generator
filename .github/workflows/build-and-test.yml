name: Build and Test

on:
 push:
   branches:
     - main
     - staging
     - dev
 pull_request:
   branches:
     - main
     - staging
     - dev

jobs:
 build:
   runs-on: windows-latest

   steps:
   - name: Checkout code
     uses: actions/checkout@v2

   - name: Setup MSBuild
     uses: microsoft/setup-msbuild@v1

   - name: Cache NuGet packages
     uses: actions/cache@v4
     with:
       path: ~/.nuget/packages
       key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
       restore-keys: |
         ${{ runner.os }}-nuget-

   - name: Restore NuGet packages
     run: nuget restore

   - name: create PFX file
     run: |
         $pfxCertFilePath = Join-Path -Path $env:CertDir -ChildPath $env:CertName
         [System.IO.File]::WriteAllBytes($pfxCertFilePath, [System.Convert]::FromBase64String("${{secrets.CERT_KEY}}"))
         certutil -f -p "" -importpfx $pfxCertFilePath
     env:
        CertDir: D:\a\document-generator\document-generator\ShapeHandler\
        CertName: ShapeHandler_TemporaryKey.pfx

   - name: Build with MSBuild
     run: msbuild /p:Configuration=Release
     env:
       SigningEnabled: false
       Password: ${{secrets.CERT_PASS}}
       Thumbprint: ${{secrets.CERT_THUMBPRINT}}
       SigningCertificate: ShapeHandler_TemporaryKey.pfx

   - name: Upload build artifacts
     uses: actions/upload-artifact@v4
     with:
       name: build-artifacts
       path: |
         **/bin/Release/*.dll
         **/bin/Release/*.pdb

 test:
   runs-on: windows-latest 
   needs: build

   steps:
   - name: Checkout code
     uses: actions/checkout@v2

   - name: Download build artifacts
     uses: actions/download-artifact@v4
     with:
       name: build-artifacts
       path: ./build

   - name: Run tests
     uses: microsoft/vstest-action@v1.0.0
     with:
       testAssembly: '**\bin\Release\ShapeHandler.Tests.dll'
       searchFolder: 'ShapeHandler.Tests\bin\Release'
       runInParallel: true