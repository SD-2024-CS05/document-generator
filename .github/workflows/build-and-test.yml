name: Build and Test

on: 
  push:
    branches:
      - main
      - staging
      - dev
  pull_request:
    branches:
      - main
      - staging
      - dev

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Cache .NET Framework Installer
      id: cache-dotnet-installer
      uses: actions/cache@v3
      with:
        path: dotnet-framework-4.8-developer-pack.exe
        key: dotnet-framework-4.8-developer-pack
        restore-keys: dotnet-framework-4.8-developer-pack

    - name: Download .NET Framework Installer if not cached
      if: steps.cache-dotnet-installer.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri https://aka.ms/dotnet-framework-4.8-developer-pack -OutFile dotnet-framework-4.8-developer-pack.exe

    - name: Install .NET Framework 4.8 Developer Pack
      run: .\dotnet-framework-4.8-developer-pack.exe /quiet /norestart

    - name: Restore NuGet packages
      run: nuget restore YourSolution.sln

    - name: Build with MSBuild
      run: msbuild YourSolution.sln /p:Configuration=Release /p:GITHUB_ACTIONS=true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          **/bin/Release/
          **/obj/Release/
          **/*.targets
          **/*.sln
          **/*.csproj

  test-dotnet:
    runs-on: windows-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: ./build

    - name: Run tests with dotnet
      continue-on-error: true
      run: |
        dotnet test ShapeHandler.sln --no-build --verbosity normal --logger "trx;LogFileName=test_results_dotnet.trx"

    - name: Upload test results for dotnet
      uses: actions/upload-artifact@v4
      with:
        name: test-results-dotnet
        path: ./test_results_dotnet.trx

  test-msbuild:
    runs-on: windows-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: ./build

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Run tests with MSBuild
      continue-on-error: true
      run: |
        msbuild /t:VSTest /p:Configuration=Release YourSolution.sln

    - name: Upload test results for MSBuild
      uses: actions/upload-artifact@v4
      with:
        name: test-results-msbuild
        path: ./test_results.trx
