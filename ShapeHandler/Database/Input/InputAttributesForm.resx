<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>