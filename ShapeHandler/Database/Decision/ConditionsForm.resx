<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>