<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB4AAAEAIACgDwAAFgAAACgAAAAgAAAAPAAAAAEAIAAAAAAAAA8AABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJVRYAB5UVQAdXV8AHHN0ACN6eRMjfYBXJICAkSKI
        iLkhlZqyJaWniSqtqmErsrAbJbe1ACSzsQAfm5cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxWUgAcV1cAHlJTCx5eYDkhd3h1H4iLvx+R
        l/Uglpz/IZ6j/yanrv8tsLT/Lre2+Cu5uMkot7VdH66rDSu+vAAjtrAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZSUgAGmViAB1VVTAcVlewHWZn7x6C
        g/8gmZz/Jaer/ymrr/8usbT/O7y//0bGyP9Cycr/O8nJ/zbDxfgyvcCxKrq4OQBCAAAntrEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0Q1ACFoZwAaWlc0HFtb0hxj
        Y/8efX//IZmb/ymusv8xtrr/MLa5/zG7vv9Bxcn/Ss3O/0jP0P9Gz9L/Q83S/0HKzv8yw8LjKry5ZCWy
        rAQmuLMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdZWAAHlxbIxxg
        X8YdZWX/H3N0/x+PkP8ho6b/KK+1/yqyuP8krbP/Jq+1/yy1uv8uubn/LLe3/zG9vv84xsf/Qc3P/z7L
        zP8xwMHxKbq2XxirpAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpd
        VwceYmCeHWdn/x1tbP8fd3b/HoWF/x2SlP8fmJv/IJqe/x6Znf8enJ3/HqKj/x6nqP8fp6j/H6ys/yO3
        tf8zxsH/PszJ/znIx/8ywr/gLcC7MDHDvgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAApfXwAImxpPB5oZu8camr/HGpq/xxoZ/8camr/HnR1/x6Agv8eioz/Ho6Q/x2Xl/8eoqD/Hqen/x+q
        q/8era7/HbW1/ym/vP83ycT/Qc3L/zvKyP8zxMKQK723AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADCHhgIfbm6RHWlq/x1nZv8dYmH/HF5e/xxiY/8dbG7/Hnx//x+KjP8fkZL/H5mY/x6i
        n/8gqqb/Ja6s/ySxsf8hubr/MMbG/zjLyP9E0Mz/Qc7M/zrKytU8zcwZAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAlamYAH2trKRxqauIcaWj/Hmhl/xxgX/8dYGH/HmNl/x5vcP8ggoP/IIyK/yaS
        kv82n6D/TK6x/1e3u/9Ztbz/U7fA/0e9w/8/yMr/Ps/P/0XPzv9I0tL/RtTV9UjW1z8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADdoYgAbaGh1HGlp/hxnZf8ea2f/HmRk/x1iY/8daGj/HnZ1/yWG
        iP8/lJr/VZag/1qNm/9aipr/VI+g/0yXpf9Jnaz/T6Cw/z2fq/81sLf/P8jM/zzGyP9G0dP+UNvdYQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG2hlDxxpacMcaWj/HGZj/xxqaP8cY2T/HGNi/x9u
        bv8vfoX/QYKN/0mDj/88ipX/QZeg/06qs/9ZwMb/VMbI/0jCxP9Fu7//ObK3/zi4v/8vr7b/J7G0/zbG
        yf9D1NZ/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgamgyHmtp7R1oaP8cZWL/G2lo/xtl
        Zf8ebW7/KXB6/yxodP8xfYT/Qquz/0C3v/8+tb3/QLi+/1rLzv9e0tT/Vc7S/07Jz/9Bw8n/MKmv/xyH
        i/8irLD/NcfM/z/U1o4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBsbU8ebGz6HGtq/x1l
        ZP8eaWr/Hm1v/x1kbf8bWV//IX2A/zCeov9Dtr7/RbrD/zewuv8pp7D/QLS9/0/Cyv9Lx87/QsXN/zSw
        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
        D/8=
</value>
  </data>
</root>